//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbConstants
// {
//
//   uint batch_idx;                    // Offset:    0 Size:     4
//   uint tex_diffuse;                  // Offset:    4 Size:     4 [unused]
//   float alpha;                       // Offset:    8 Size:     4 [unused]
//
// }
//
// cbuffer cbPerFrame
// {
//
//   float4x4 r_Projection;             // Offset:    0 Size:    64
//   float4x4 r_View;                   // Offset:   64 Size:    64
//   float4 r_FogColor;                 // Offset:  128 Size:    16 [unused]
//   float r_FogStart;                  // Offset:  144 Size:     4 [unused]
//   float r_FogEnd;                    // Offset:  148 Size:     4 [unused]
//
// }
//
// cbuffer cbPerObject
// {
//
//   float4x4 r_Model[1024];            // Offset:    0 Size: 65536
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbConstants                       cbuffer      NA          NA            cb0      1 
// cbPerFrame                        cbuffer      NA          NA            cb1      1 
// cbPerObject                       cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_constantbuffer CB2[4096], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 7
mul r0.xyzw, cb1[1].xyzw, cb1[7].yyyy
mad r0.xyzw, cb1[0].xyzw, cb1[7].xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, cb1[7].zzzz, r0.xyzw
mad r0.xyzw, cb1[3].xyzw, cb1[7].wwww, r0.xyzw
mul r1.xyzw, cb1[1].xyzw, cb1[6].yyyy
mad r1.xyzw, cb1[0].xyzw, cb1[6].xxxx, r1.xyzw
mad r1.xyzw, cb1[2].xyzw, cb1[6].zzzz, r1.xyzw
mad r1.xyzw, cb1[3].xyzw, cb1[6].wwww, r1.xyzw
mul r2.xyzw, cb1[1].xyzw, cb1[4].yyyy
mad r2.xyzw, cb1[0].xyzw, cb1[4].xxxx, r2.xyzw
mad r2.xyzw, cb1[2].xyzw, cb1[4].zzzz, r2.xyzw
mad r2.xyzw, cb1[3].xyzw, cb1[4].wwww, r2.xyzw
mul r3.xyzw, cb1[1].xyzw, cb1[5].yyyy
mad r3.xyzw, cb1[0].xyzw, cb1[5].xxxx, r3.xyzw
mad r3.xyzw, cb1[2].xyzw, cb1[5].zzzz, r3.xyzw
mad r3.xyzw, cb1[3].xyzw, cb1[5].wwww, r3.xyzw
ishl r4.x, cb0[0].x, l(2)
mul r5.xyzw, r3.xyzw, cb2[r4.x + 1].yyyy
mad r5.xyzw, r2.xyzw, cb2[r4.x + 1].xxxx, r5.xyzw
mad r5.xyzw, r1.xyzw, cb2[r4.x + 1].zzzz, r5.xyzw
mad r5.xyzw, r0.xyzw, cb2[r4.x + 1].wwww, r5.xyzw
mul r5.xyzw, r5.xyzw, v0.yyyy
mul r6.xyzw, r3.xyzw, cb2[r4.x + 0].yyyy
mad r6.xyzw, r2.xyzw, cb2[r4.x + 0].xxxx, r6.xyzw
mad r6.xyzw, r1.xyzw, cb2[r4.x + 0].zzzz, r6.xyzw
mad r6.xyzw, r0.xyzw, cb2[r4.x + 0].wwww, r6.xyzw
mad r5.xyzw, r6.xyzw, v0.xxxx, r5.xyzw
mul r6.xyzw, r3.xyzw, cb2[r4.x + 2].yyyy
mul r3.xyzw, r3.xyzw, cb2[r4.x + 3].yyyy
mad r3.xyzw, r2.xyzw, cb2[r4.x + 3].xxxx, r3.xyzw
mad r2.xyzw, r2.xyzw, cb2[r4.x + 2].xxxx, r6.xyzw
mad r2.xyzw, r1.xyzw, cb2[r4.x + 2].zzzz, r2.xyzw
mad r1.xyzw, r1.xyzw, cb2[r4.x + 3].zzzz, r3.xyzw
mad r1.xyzw, r0.xyzw, cb2[r4.x + 3].wwww, r1.xyzw
mad r0.xyzw, r0.xyzw, cb2[r4.x + 2].wwww, r2.xyzw
mad r0.xyzw, r0.xyzw, v0.zzzz, r5.xyzw
add o0.xyzw, r1.xyzw, r0.xyzw
mov o1.xyz, v1.xyzx
mov o1.w, l(1.000000)
mov o2.xy, v2.xyxx
ret 
// Approximately 41 instruction slots used
